

services:

  ghost:
    image: ghost:5-alpine
    container_name: ghost
    restart: always
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: "/usr/bin/nc localhost 2368 || exit 1"
      interval: 30s
      timeout: 10s
      retries: 5
    expose:
      - 2368
    ports:
      - 2368:2368
    volumes:
      - ${DOCKER_VOLUME_STORAGE:-/mnt/docker-volumes}/ghost/content:/var/lib/ghost/content
    environment:
      # see https://ghost.org/docs/config/#configuration-options
      database__client: ${DB_CLIENT:-mysql}
      database__connection__host: ${DB_HOST:-database}
      database__connection__user: ${DB_USER:-ghost}
      database__connection__password: ${DB_USER_PASS:-DatabasePassword1234}
      database__connection__database: ${DB_NAME:-ghost}
      url: https://linuxpad.blog # adjust to your domain and correct protocol handler + port
      #NODE_ENV: developmnent # default is production already
      #mail__transport: SMTP
      #mail__options__host: ${SMTP_HOST:-smtp.google.com}
      #mail__options__port: ${SMTP_PORT:-587}
      #mail__options__auth__user: ${SMTP_USER:-ghost@example.com}
      #mail__options__auth__pass: ${SMTP_PASS:-SMTPPassword}
      #mail__from: ${SMTP_MAIL_FROM:-Ghost}
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - traefik.http.routers.ghost.rule=Host(`linuxpag.blog`)
      - traefik.http.routers.ghost.tls=true
      - traefik.http.routers.ghost.tls.certresolver=prodresolver
      - traefik.http.routers.ghost.entrypoints=websecure
      - traefik.http.services.ghost.loadbalancer.server.port=80
      - traefik.http.routers.ghost.service=ghost
                    #Define midleware 
      - "traefik.http.routers.ghost.middlewares=crowdsec-ghost@docker" 
                    ## Middleware configuration
      - "traefik.http.middlewares.crowdsec-ghost.plugin.crowdsec-bouncer.enabled=true"
      - "traefik.http.middlewares.crowdsec-ghost.plugin.crowdsec-bouncer.crowdseclapikey=uw//V2nuhODeROUjnXQPBSYA7eOFwweLq25s1btEZHc"

  database:
    image: mysql:8
    container_name: ghost_db
    restart: always
    healthcheck:
      test: ["CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$$DB_ROOT_PASS' ]
      timeout: 20s
      retries: 10
    volumes:
      - ${DOCKER_VOLUME_STORAGE:-/mnt/docker-volumes}/ghost/mysql:/var/lib/mysql
    expose:
      - 3306
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS:-DatabaseRootPassword54321}
      MYSQL_DATABASE: ${DB_NAME:-ghost}
      MYSQL_USER: ${DB_USER:-ghost}
      MYSQL_PASSWORD: ${DB_USER_PASS:-DatabasePassword1234}
    networks:
      - proxy

  db_backup:
    container_name: db_backup
    image: tiredofit/db-backup
    depends_on:
      - database
      - ghost
    volumes:
      - ../backups/ghost_db/:/backup
      #- ./post-script.sh:/assets/custom-scripts/post-script.sh
    environment:
      # - DEBUG_MODE=TRUE
      - DB_TYPE=mysql
      - DB_HOST=ghost_mysql
      - DB_NAME=${DB_NAME:-ghost}
      - DB_USER=${DB_USER:-ghost}
      - DB_PASS=${DB_USER_PASS:-DatabasePassword1234}
      - DB_BACKUP_INTERVAL=720          # backup 12 hours 12 * 60
      - DB_BACKUP_BEGIN=0000      # backup starts immediately
      - DB_CLEANUP_TIME=72000     # clean backups that are older than 72000 minutes
      - DB_CHECKSUM=SHA1
      - DB_COMPRESSION=GZ
      - DB_SPLIT_DB=true
      - CONTAINER_ENABLE_MONITORING=FALSE
    restart: always

networks:
  proxy:
    external: true
