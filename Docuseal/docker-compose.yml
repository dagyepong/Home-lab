version: '3'

services:

  app:
    image: docuseal/docuseal:latest
    container_name: docuseal
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/docuseal
    volumes:
      - ${DOCKER_VOLUME_STORAGE:-/mnt/docker-volumes}/docuseal/data:/data
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 3060:3000
    expose:
      - 3060
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.docuseal.rule=Host(`docuseal.nanaoware.online`) || Host(`www.docuseal.nanaoware.online`)
      - traefik.http.services.docuseal.loadbalancer.server.port=3060
      - traefik.http.middlewares.mywwwredirect.redirectregex.regex=^https://www\.(.*)
      - traefik.http.middlewares.mywwwredirect.redirectregex.replacement=https://$${1}
      - traefik.http.routers.mydocuseal.middlewares=mywwwredirect
      - traefik.http.routers.mydocuseal.middlewares=myauth
      - traefik.http.routers.mydocuseal.service=api@internal


  postgres:
    image: postgres:15-alpine
    container_name: docuseal-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=docuseal
    volumes:
      - ${DOCKER_VOLUME_STORAGE:-/mnt/docker-volumes}/docuseal/pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    expose:
      - 5432
    networks:
      - proxy

networks:
  proxy:
    external: true