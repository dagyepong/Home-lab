



volumes:
  letsencrypt:
    name: letsencrypt
  logs:






services:
  reverse-proxy:
    # The official v3 Traefik docker image
    image: traefik:latest
    container_name: reverse-proxy
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http3
      - --entrypoints.websecure.http.middlewares=crowdsec-bouncer@docker

      - --log.level=INFO

      - --providers.docker=true
      - --providers.docker.network=proxy
      - --providers.docker.exposedbydefault=false # Do not expose containers unless explicitly told so

      - --api.dashboard=true # Enable dashboard
      - --api.debug=true

      - --certificatesresolvers.le.acme.tlschallenge=true
      - --certificatesresolvers.le.acme.email=dollarsterl@gmail.com #  cert resolvers
      - --certificatesResolvers.le.acme.storage=/letsencrypt/acme.json

      
      - --log.filepath=/var/log/traefik.log
      - --accesslog=true
      - --accesslog.filepath=/var/log/traefik-access.log
      - --metrics.prometheus=true
      - --metrics.prometheus.buckets=0.1,0.3,1.2,5.0
      - --entrypoints.websecure.http.tls.certresolver=le
      - --entryPoints.tcp-plain.address=:9000
      - --certificatesresolvers.myresolver.acme.tlschallenge=true
      - --certificatesResolvers.myresolver.acme.email=owarenana06@gmail.com
    restart: always
    ports:
      - 80:80/tcp
      - 80:80/udp
      - 443:443/tcp
      - 443:443/udp
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - letsencrypt:/letsencrypt
      - logs:/var/log/

    
    labels:
      - "traefik.enable: true"

      # Dashboard
      - "traefik.http.routers.reverse-proxy.rule: Host(`dashboard.nanaoware.online`)"
      - "traefik.http.routers.reverse-proxy.entrypoints: websecure"
      - "traefik.http.routers.reverse-proxy.service: api@internal"
      - "traefik.http.routers.reverse-proxy.tls: true"
      - "traefik.http.routers.reverse-proxy.tls.certresolver: le"
      - "traefik.http.routers.reverse-proxy.middlewares: dashboard"
      - "traefik.http.middlewares.dashboard.basicauth.users: test:$$apr1$$H6uskkkW$$IgXLP6ewTrSuBkTrqE8wj/"


      # SECURITY MIDDLEWARE named "hstsx"
      - "traefik.http.middlewares.hstsx.headers.stsincludesubdomains: true"
      - "traefik.http.middlewares.hstsx.headers.stspreload: true"
      - "traefik.http.middlewares.hstsx.headers.stsseconds: 31536000"
      - "traefik.http.middlewares.hstsx.headers.forcestsheader: true"
      - "traefik.http.middlewares.hstsx.headers.customframeoptionsvalue: sameorigin"
      - "traefik.http.middlewares.hstsx.headers.browserxssfilter: true"
      - "traefik.http.middlewares.hstsx.headers.sslredirect: true"
      - "traefik.http.middlewares.hstsx.headers.contenttypenosniff: true"
      - "traefik.http.middlewares.crowdsec-bouncer.forwardauth.address=http://crowdsec-bouncer:8080/api/v1/forwardAuth"
      - "traefik.http.middlewares.crowdsec-bouncer.forwardauth.trustForwardHeader=true"
    networks:
      - proxy



  whoami:
    image: traefik/whoami:v1.9
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami.entrypoints=websecure
      - traefik.http.routers.whoami.rule=Host(`whoami.nanaoware.online`)
      - traefik.http.services.whoami.loadbalancer.server.port=80

  tcpecho-le:
    image: istio/tcp-echo-server:1.2
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.tcp.routers.tcpecho-le.entrypoints=websecure
      - traefik.tcp.routers.tcpecho-le.rule=HostSNI(`tcp.nanaoware.online`)
      - traefik.tcp.routers.tcpecho-le.tls.certresolver=le
      - traefik.tcp.services.tcpecho-le.loadbalancer.server.port=9000

  tcpecho-plain:
    image: istio/tcp-echo-server:1.2
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.tcp.routers.tcpecho-plain.entrypoints=tcp-plain
      - traefik.tcp.routers.tcpecho-plain.rule=HostSNI(`*`)
      - traefik.tcp.services.tcpecho-plain.loadbalancer.server.port=9000      

networks:
  proxy:
    external: true
