
services:
  umami:
    image: ghcr.io/umami-software/umami:postgresql-latest
    environment:
      DATABASE_URL: postgresql://umami:umami@db:5432/umami
      DATABASE_TYPE: postgresql
      APP_SECRET: replace-me-with-a-random-string
    depends_on:
      db:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:3000/api/heartbeat"]
      interval: 5s
      timeout: 5s
      retries: 5
    
    networks:
      - traefik

    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.umami-http.entrypoints=http"
      - "traefik.http.routers.umami-http.middlewares=redir-https"
      - "traefik.http.routers.umami-http.rule=Host(`umami.linuxpad.blog`)"
      - "traefik.http.routers.umami-http.service=noop@internal"
      - "traefik.http.routers.umami-https.entrypoints=https"
      - "traefik.http.routers.umami-https.tls=true"
      - "traefik.http.routers.umami-https.middlewares=gzip"
      - "traefik.http.routers.umami-https.rule=Host(`umami.linuxpad.blog`)"
      - "traefik.http.services.umami-backend.loadbalancer.server.scheme=http"
      - "traefik.http.services.umami-backend.loadbalancer.server.port=3021"
      - "traefik.http.routers.umami-https.middlewares=authelia@docker"





  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: umami
      POSTGRES_USER: umami
      POSTGRES_PASSWORD: umami
    volumes:
      - /srv/appdata/umami/dba:/var/lib/postgresql/data
    restart: always
    networks:
      - traefik
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
volumes:
  umami-db-data:

  # username admin
  # psswd umami

networks:
  traefik:
    external: true
